#textdomain wesnoth-jos-random-recruits

# TODO ship this with a "union of all mainline factions" faction

[modification]
    id=jos_random_recruits
    name=_ "Random Recruits"
    type=mp
    description=_ "Every time you recruit, you'll be given a random unit from your recruit list."

    [event]
        name=prerecruit
        id=jos_random_recruits_prerecruit
        first_time_only=no
        [lua]
            code=<<
                local ev = wesnoth.current.event_context
                local unit = wesnoth.get_unit(ev.x1, ev.y1)
                local side = wesnoth.sides[unit.side];
                local new_type = wesnoth.unit_types[side.recruit[wesnoth.random(1, #side.recruit)]]
                local new_cost = new_type.cost
                if side.gold - new_cost < 0 then
                    -- The randomly-chosen unit is more expensive than the player can afford.
                    -- Abort the recruit.
                    -- The player can still get one of the units he can afford by trying to recruit repeatedly.
                    unit:erase()
                    unit = nil
                    -- TODO: make translatable (add _, don't use concatenation)
                    wesnoth.show_message_box("Random Recruits", "No unit recruited: insufficient gold to recruit a " .. new_type.name, "")
                    return
                end
                -- pre-refund the unit the engine thinks it recruited; the engine will subtract that cost before the "recruit" event fires.
                side.gold = side.gold + unit.cost

                -- TODO the transformed unit inherits the traits of the original unit
                -- This is noticeable with mixed-race factions, for example, if the player recruits a Dark Adept the Adept's traits would be retained even after transformation to a Walking Corpse or a Skeleton
                wesnoth.transform_unit(unit, new_type.id)
                unit.hitpoints = unit.max_hitpoints

                -- charge the unit that was actually "recruited"
                side.gold = side.gold - unit.cost
            >>
        [/lua]
    [/event]

[/modification]
